"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/appointments";
exports.ids = ["pages/api/appointments"];
exports.modules = {

/***/ "(api-node)/./lib/prisma.ts":
/*!***********************!*\
  !*** ./lib/prisma.ts ***!
  \***********************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   prisma: () => (/* binding */ prisma)\n/* harmony export */ });\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @prisma/client */ \"@prisma/client\");\n/* harmony import */ var _prisma_client__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(_prisma_client__WEBPACK_IMPORTED_MODULE_0__);\n\n// PrismaClient is attached to the `global` object in development to prevent\n// exhausting your database connection limit.\n// Learn more: https://pris.ly/d/help/next-js-best-practices\nconst globalForPrisma = global;\nconst prisma = globalForPrisma.prisma || new _prisma_client__WEBPACK_IMPORTED_MODULE_0__.PrismaClient({\n    log:  true ? [\n        'query',\n        'error',\n        'warn'\n    ] : 0\n});\nif (true) globalForPrisma.prisma = prisma;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL2xpYi9wcmlzbWEudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQTZDO0FBRTdDLDRFQUE0RTtBQUM1RSw2Q0FBNkM7QUFDN0MsNERBQTREO0FBRTVELE1BQU1DLGtCQUFrQkM7QUFFakIsTUFBTUMsU0FDWEYsZ0JBQWdCRSxNQUFNLElBQ3RCLElBQUlILHdEQUFZQSxDQUFDO0lBQ2ZJLEtBQUtDLEtBQXNDLEdBQUc7UUFBQztRQUFTO1FBQVM7S0FBTyxHQUFHLENBQVM7QUFDdEYsR0FBRTtBQUVKLElBQUlBLElBQXFDLEVBQUVKLGdCQUFnQkUsTUFBTSxHQUFHQSIsInNvdXJjZXMiOlsiL1VzZXJzL3NiaGF2YW5pL2NvZGUvcmFkaWFudC1mbG93LWltYWdpbmctaHViL2xpYi9wcmlzbWEudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUHJpc21hQ2xpZW50IH0gZnJvbSAnQHByaXNtYS9jbGllbnQnXG5cbi8vIFByaXNtYUNsaWVudCBpcyBhdHRhY2hlZCB0byB0aGUgYGdsb2JhbGAgb2JqZWN0IGluIGRldmVsb3BtZW50IHRvIHByZXZlbnRcbi8vIGV4aGF1c3RpbmcgeW91ciBkYXRhYmFzZSBjb25uZWN0aW9uIGxpbWl0LlxuLy8gTGVhcm4gbW9yZTogaHR0cHM6Ly9wcmlzLmx5L2QvaGVscC9uZXh0LWpzLWJlc3QtcHJhY3RpY2VzXG5cbmNvbnN0IGdsb2JhbEZvclByaXNtYSA9IGdsb2JhbCBhcyB1bmtub3duIGFzIHsgcHJpc21hOiBQcmlzbWFDbGllbnQgfVxuXG5leHBvcnQgY29uc3QgcHJpc21hID1cbiAgZ2xvYmFsRm9yUHJpc21hLnByaXNtYSB8fFxuICBuZXcgUHJpc21hQ2xpZW50KHtcbiAgICBsb2c6IHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAnZGV2ZWxvcG1lbnQnID8gWydxdWVyeScsICdlcnJvcicsICd3YXJuJ10gOiBbJ2Vycm9yJ10sXG4gIH0pXG5cbmlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSBnbG9iYWxGb3JQcmlzbWEucHJpc21hID0gcHJpc21hXG4iXSwibmFtZXMiOlsiUHJpc21hQ2xpZW50IiwiZ2xvYmFsRm9yUHJpc21hIiwiZ2xvYmFsIiwicHJpc21hIiwibG9nIiwicHJvY2VzcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(api-node)/./lib/prisma.ts\n");

/***/ }),

/***/ "(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fappointments&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fappointments%2Findex.ts&middlewareConfigBase64=e30%3D!":
/*!************************************************************************************************************************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fappointments&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fappointments%2Findex.ts&middlewareConfigBase64=e30%3D! ***!
  \************************************************************************************************************************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   config: () => (/* binding */ config),\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__),\n/* harmony export */   routeModule: () => (/* binding */ routeModule)\n/* harmony export */ });\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! next/dist/server/route-modules/pages-api/module.compiled */ \"(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/route-modules/pages-api/module.compiled.js\");\n/* harmony import */ var next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! next/dist/server/route-kind */ \"(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/server/route-kind.js\");\n/* harmony import */ var next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! next/dist/build/templates/helpers */ \"(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/templates/helpers.js\");\n/* harmony import */ var _pages_api_appointments_index_ts__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pages/api/appointments/index.ts */ \"(api-node)/./pages/api/appointments/index.ts\");\n\n\n\n// Import the userland code.\n\n// Re-export the handler (should be the default export).\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_appointments_index_ts__WEBPACK_IMPORTED_MODULE_3__, 'default'));\n// Re-export config.\nconst config = (0,next_dist_build_templates_helpers__WEBPACK_IMPORTED_MODULE_2__.hoist)(_pages_api_appointments_index_ts__WEBPACK_IMPORTED_MODULE_3__, 'config');\n// Create and export the route module that will be consumed.\nconst routeModule = new next_dist_server_route_modules_pages_api_module_compiled__WEBPACK_IMPORTED_MODULE_0__.PagesAPIRouteModule({\n    definition: {\n        kind: next_dist_server_route_kind__WEBPACK_IMPORTED_MODULE_1__.RouteKind.PAGES_API,\n        page: \"/api/appointments\",\n        pathname: \"/api/appointments\",\n        // The following aren't used in production.\n        bundlePath: '',\n        filename: ''\n    },\n    userland: _pages_api_appointments_index_ts__WEBPACK_IMPORTED_MODULE_3__\n});\n\n//# sourceMappingURL=pages-api.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaS1ub2RlKS8uL25vZGVfbW9kdWxlcy8ucG5wbS9uZXh0QDE1LjMuMl9AYmFiZWwrY29yZUA3LjI3LjFfcmVhY3QtZG9tQDE4LjMuMV9yZWFjdEAxOC4zLjFfX3JlYWN0QDE4LjMuMS9ub2RlX21vZHVsZXMvbmV4dC9kaXN0L2J1aWxkL3dlYnBhY2svbG9hZGVycy9uZXh0LXJvdXRlLWxvYWRlci9pbmRleC5qcz9raW5kPVBBR0VTX0FQSSZwYWdlPSUyRmFwaSUyRmFwcG9pbnRtZW50cyZwcmVmZXJyZWRSZWdpb249JmFic29sdXRlUGFnZVBhdGg9LiUyRnBhZ2VzJTJGYXBpJTJGYXBwb2ludG1lbnRzJTJGaW5kZXgudHMmbWlkZGxld2FyZUNvbmZpZ0Jhc2U2ND1lMzAlM0QhIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7O0FBQStGO0FBQ3ZDO0FBQ0U7QUFDMUQ7QUFDOEQ7QUFDOUQ7QUFDQSxpRUFBZSx3RUFBSyxDQUFDLDZEQUFRLFlBQVksRUFBQztBQUMxQztBQUNPLGVBQWUsd0VBQUssQ0FBQyw2REFBUTtBQUNwQztBQUNPLHdCQUF3Qix5R0FBbUI7QUFDbEQ7QUFDQSxjQUFjLGtFQUFTO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsWUFBWTtBQUNaLENBQUM7O0FBRUQiLCJzb3VyY2VzIjpbIiJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBQYWdlc0FQSVJvdXRlTW9kdWxlIH0gZnJvbSBcIm5leHQvZGlzdC9zZXJ2ZXIvcm91dGUtbW9kdWxlcy9wYWdlcy1hcGkvbW9kdWxlLmNvbXBpbGVkXCI7XG5pbXBvcnQgeyBSb3V0ZUtpbmQgfSBmcm9tIFwibmV4dC9kaXN0L3NlcnZlci9yb3V0ZS1raW5kXCI7XG5pbXBvcnQgeyBob2lzdCB9IGZyb20gXCJuZXh0L2Rpc3QvYnVpbGQvdGVtcGxhdGVzL2hlbHBlcnNcIjtcbi8vIEltcG9ydCB0aGUgdXNlcmxhbmQgY29kZS5cbmltcG9ydCAqIGFzIHVzZXJsYW5kIGZyb20gXCIuL3BhZ2VzL2FwaS9hcHBvaW50bWVudHMvaW5kZXgudHNcIjtcbi8vIFJlLWV4cG9ydCB0aGUgaGFuZGxlciAoc2hvdWxkIGJlIHRoZSBkZWZhdWx0IGV4cG9ydCkuXG5leHBvcnQgZGVmYXVsdCBob2lzdCh1c2VybGFuZCwgJ2RlZmF1bHQnKTtcbi8vIFJlLWV4cG9ydCBjb25maWcuXG5leHBvcnQgY29uc3QgY29uZmlnID0gaG9pc3QodXNlcmxhbmQsICdjb25maWcnKTtcbi8vIENyZWF0ZSBhbmQgZXhwb3J0IHRoZSByb3V0ZSBtb2R1bGUgdGhhdCB3aWxsIGJlIGNvbnN1bWVkLlxuZXhwb3J0IGNvbnN0IHJvdXRlTW9kdWxlID0gbmV3IFBhZ2VzQVBJUm91dGVNb2R1bGUoe1xuICAgIGRlZmluaXRpb246IHtcbiAgICAgICAga2luZDogUm91dGVLaW5kLlBBR0VTX0FQSSxcbiAgICAgICAgcGFnZTogXCIvYXBpL2FwcG9pbnRtZW50c1wiLFxuICAgICAgICBwYXRobmFtZTogXCIvYXBpL2FwcG9pbnRtZW50c1wiLFxuICAgICAgICAvLyBUaGUgZm9sbG93aW5nIGFyZW4ndCB1c2VkIGluIHByb2R1Y3Rpb24uXG4gICAgICAgIGJ1bmRsZVBhdGg6ICcnLFxuICAgICAgICBmaWxlbmFtZTogJydcbiAgICB9LFxuICAgIHVzZXJsYW5kXG59KTtcblxuLy8jIHNvdXJjZU1hcHBpbmdVUkw9cGFnZXMtYXBpLmpzLm1hcCJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fappointments&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fappointments%2Findex.ts&middlewareConfigBase64=e30%3D!\n");

/***/ }),

/***/ "(api-node)/./pages/api/appointments/index.ts":
/*!*****************************************!*\
  !*** ./pages/api/appointments/index.ts ***!
  \*****************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var _lib_prisma__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @/lib/prisma */ \"(api-node)/./lib/prisma.ts\");\n\nasync function handler(req, res) {\n    switch(req.method){\n        case 'GET':\n            return await getAppointments(req, res);\n        case 'POST':\n            return await createAppointment(req, res);\n        default:\n            res.setHeader('Allow', [\n                'GET',\n                'POST'\n            ]);\n            return res.status(405).json({\n                error: `Method ${req.method} Not Allowed`\n            });\n    }\n}\n// Get appointments with filtering options\nasync function getAppointments(req, res) {\n    try {\n        const { patientId, providerId, appointmentTypeId, startDate, endDate, status } = req.query;\n        // Build the query filter\n        const filter = {};\n        // Filter by associations\n        if (patientId && typeof patientId === 'string') {\n            filter.patientId = patientId;\n        }\n        if (providerId && typeof providerId === 'string') {\n            filter.providerId = providerId;\n        }\n        if (appointmentTypeId && typeof appointmentTypeId === 'string') {\n            filter.appointmentTypeId = appointmentTypeId;\n        }\n        // Filter by date range\n        if (startDate || endDate) {\n            filter.startTime = {};\n            if (startDate && typeof startDate === 'string') {\n                filter.startTime.gte = new Date(startDate);\n            }\n            if (endDate && typeof endDate === 'string') {\n                filter.startTime.lte = new Date(endDate);\n            }\n        }\n        // Filter by status\n        if (status && typeof status === 'string') {\n            if (status === 'ACTIVE') {\n                // Special case for active appointments (scheduled or confirmed)\n                filter.status = {\n                    in: [\n                        'SCHEDULED',\n                        'CONFIRMED'\n                    ]\n                };\n            } else {\n                filter.status = status;\n            }\n        }\n        const appointments = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.appointment.findMany({\n            where: filter,\n            include: {\n                patient: true,\n                provider: true,\n                appointmentType: true\n            },\n            orderBy: {\n                startTime: 'asc'\n            }\n        });\n        return res.status(200).json(appointments);\n    } catch (error) {\n        console.error('Error fetching appointments:', error);\n        return res.status(500).json({\n            error: 'Failed to fetch appointments'\n        });\n    }\n}\n// Create a new appointment\nasync function createAppointment(req, res) {\n    try {\n        const { title, patientId, providerId, appointmentTypeId, startTime, endTime, notes, status } = req.body;\n        // Validate required fields\n        if (!title || !patientId || !providerId || !startTime || !endTime) {\n            return res.status(400).json({\n                error: 'Title, patient ID, provider ID, start time, and end time are required'\n            });\n        }\n        // Validate patient and provider exist\n        const patient = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.patient.findUnique({\n            where: {\n                id: patientId\n            }\n        });\n        if (!patient) {\n            return res.status(404).json({\n                error: 'Patient not found'\n            });\n        }\n        const provider = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.provider.findUnique({\n            where: {\n                id: providerId\n            }\n        });\n        if (!provider) {\n            return res.status(404).json({\n                error: 'Provider not found'\n            });\n        }\n        // Validate appointment type if provided\n        if (appointmentTypeId) {\n            const appointmentType = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.appointmentType.findUnique({\n                where: {\n                    id: appointmentTypeId\n                }\n            });\n            if (!appointmentType) {\n                return res.status(404).json({\n                    error: 'Appointment type not found'\n                });\n            }\n        }\n        // Validate times\n        const parsedStartTime = new Date(startTime);\n        const parsedEndTime = new Date(endTime);\n        if (isNaN(parsedStartTime.getTime()) || isNaN(parsedEndTime.getTime())) {\n            return res.status(400).json({\n                error: 'Invalid date format'\n            });\n        }\n        if (parsedEndTime <= parsedStartTime) {\n            return res.status(400).json({\n                error: 'End time must be after start time'\n            });\n        }\n        // Check for overlapping appointments for the provider\n        const overlappingProviderAppointments = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.appointment.findMany({\n            where: {\n                providerId,\n                status: {\n                    in: [\n                        'SCHEDULED',\n                        'CONFIRMED'\n                    ]\n                },\n                OR: [\n                    {\n                        // New start time is within an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    lte: parsedStartTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    gt: parsedStartTime\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        // New end time is within an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    lt: parsedEndTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    gte: parsedEndTime\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        // New appointment completely contains an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    gte: parsedStartTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    lte: parsedEndTime\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        });\n        if (overlappingProviderAppointments.length > 0) {\n            return res.status(400).json({\n                error: 'This time slot overlaps with another appointment for this provider'\n            });\n        }\n        // Check for overlapping appointments for the patient\n        const overlappingPatientAppointments = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.appointment.findMany({\n            where: {\n                patientId,\n                status: {\n                    in: [\n                        'SCHEDULED',\n                        'CONFIRMED'\n                    ]\n                },\n                OR: [\n                    {\n                        // New start time is within an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    lte: parsedStartTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    gt: parsedStartTime\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        // New end time is within an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    lt: parsedEndTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    gte: parsedEndTime\n                                }\n                            }\n                        ]\n                    },\n                    {\n                        // New appointment completely contains an existing appointment\n                        AND: [\n                            {\n                                startTime: {\n                                    gte: parsedStartTime\n                                }\n                            },\n                            {\n                                endTime: {\n                                    lte: parsedEndTime\n                                }\n                            }\n                        ]\n                    }\n                ]\n            }\n        });\n        if (overlappingPatientAppointments.length > 0) {\n            return res.status(400).json({\n                error: 'This time slot overlaps with another appointment for this patient'\n            });\n        }\n        // Create the appointment\n        const appointment = await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.appointment.create({\n            data: {\n                title,\n                patientId,\n                providerId,\n                appointmentTypeId: appointmentTypeId || null,\n                startTime: parsedStartTime,\n                endTime: parsedEndTime,\n                notes: notes || null,\n                status: status || 'SCHEDULED'\n            },\n            include: {\n                patient: true,\n                provider: true,\n                appointmentType: true\n            }\n        });\n        // If there's a time slot that corresponds to this appointment, mark it as unavailable\n        // This is a simplification - in a real system, you might want to handle this differently\n        // or even have a direct relation between appointments and time slots\n        await _lib_prisma__WEBPACK_IMPORTED_MODULE_0__.prisma.timeSlot.updateMany({\n            where: {\n                providerId,\n                startTime: parsedStartTime,\n                endTime: parsedEndTime,\n                isAvailable: true\n            },\n            data: {\n                isAvailable: false\n            }\n        });\n        return res.status(201).json(appointment);\n    } catch (error) {\n        console.error('Error creating appointment:', error);\n        return res.status(500).json({\n            error: 'Failed to create appointment'\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api-node)/./pages/api/appointments/index.ts\n");

/***/ }),

/***/ "@prisma/client":
/*!*********************************!*\
  !*** external "@prisma/client" ***!
  \*********************************/
/***/ ((module) => {

module.exports = require("@prisma/client");

/***/ }),

/***/ "next/dist/compiled/next-server/pages-api.runtime.dev.js":
/*!**************************************************************************!*\
  !*** external "next/dist/compiled/next-server/pages-api.runtime.dev.js" ***!
  \**************************************************************************/
/***/ ((module) => {

module.exports = require("next/dist/compiled/next-server/pages-api.runtime.dev.js");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = __webpack_require__.X(0, ["vendor-chunks/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1"], () => (__webpack_exec__("(api-node)/./node_modules/.pnpm/next@15.3.2_@babel+core@7.27.1_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/next/dist/build/webpack/loaders/next-route-loader/index.js?kind=PAGES_API&page=%2Fapi%2Fappointments&preferredRegion=&absolutePagePath=.%2Fpages%2Fapi%2Fappointments%2Findex.ts&middlewareConfigBase64=e30%3D!")));
module.exports = __webpack_exports__;

})();